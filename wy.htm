<!DOCTYPE html>
<html lang="zh-CN">
<head>
<meta charset="UTF-8">
<meta content="width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=0" name="viewport">
<meta content="yes" name="apple-mobile-web-app-capable">
<meta content="yes" name="apple-touch-fullscreen">
<meta content="black" name="apple-mobile-web-app-status-bar-style">
<meta content="320" name="MobileOptimized">
<title>网页</title>
<style>
.loader {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border: 3px solid;
  border-color: #007bff #007bff transparent;
  animation: rotation 1s linear infinite;
}
@keyframes rotation {
  0% { transform: translate(-50%, -50%) rotate(0deg); }
  100% { transform: translate(-50%, -50%) rotate(360deg); }
}
html, body {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}
.content {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  border: none;
}
.auth-error {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  padding: 20px;
  background: #f8f9fa;
  border-radius: 10px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1);
  display: none;
}
.auth-error h2 {
  color: #dc3545;
  margin-bottom: 15px;
}
.auth-error p {
  color: #666;
  margin: 10px 0;
}
.auth-error .domain {
  color: #007bff;
  font-weight: bold;
  font-size: 18px;
  margin: 15px 0;
}
</style>
</head>
<body>
<div class="loader"></div>
<div class="auth-error" id="authError">
  <h2>域名未授权</h2>
  <p>当前域名：</p>
  <div class="domain" id="unauthorizedDomain"></div>
  <p>并未授权，请联系王也进行授权！</p>
</div>
<script>
// 授权域名列表 - 在这里添加授权的主域名
const authorizedDomains = [
    'a14s.cn',
    'js9966.cn',
    // 在这里添加更多授权域名
];

// 提取主域名的函数
function getMainDomain(url) {
    try {
        const urlObj = new URL(url);
        const hostname = urlObj.hostname.toLowerCase();
        
        // 处理IP地址的情况
        if (/^(\d{1,3}\.){3}\d{1,3}$/.test(hostname)) {
            return hostname;
        }
        
        // 提取主域名
        const parts = hostname.split('.');
        if (parts.length >= 2) {
            // 处理常见的二级域名后缀（如.com.cn, .co.uk等）
            const commonSuffixes = ['com.cn', 'net.cn', 'org.cn', 'gov.cn', 'co.uk', 'co.jp'];
            for (let suffix of commonSuffixes) {
                if (hostname.endsWith(suffix)) {
                    const suffixParts = suffix.split('.').length;
                    return parts.slice(-(suffixParts + 1)).join('.');
                }
            }
            // 普通域名提取最后两部分
            return parts.slice(-2).join('.');
        }
        return hostname;
    } catch (e) {
        console.error('解析域名失败:', e);
        return null;
    }
}

// 检查域名是否授权
function checkDomainAuthorization(url) {
    const mainDomain = getMainDomain(url);
    if (!mainDomain) return false;
    
    return authorizedDomains.some(domain => 
        mainDomain === domain.toLowerCase() || 
        mainDomain.endsWith('.' + domain.toLowerCase())
    );
}

// 显示未授权提示
function showUnauthorizedMessage(url) {
    const loader = document.querySelector('.loader');
    const authError = document.getElementById('authError');
    const unauthorizedDomain = document.getElementById('unauthorizedDomain');
    
    loader.style.display = 'none';
    unauthorizedDomain.textContent = getMainDomain(url) || '未知域名';
    authError.style.display = 'block';
}

const urlParams = new URLSearchParams(window.location.search);
const encodedParam = urlParams.get('c');
if (encodedParam) {
    try {
        const trueUrl = atob(encodedParam);
        if (trueUrl.includes('http')) {
            // 检查域名授权
            if (!checkDomainAuthorization(trueUrl)) {
                showUnauthorizedMessage(trueUrl);
            } else {
                // 域名已授权，继续原有逻辑
                const loader = document.querySelector('.loader');
                setTimeout(() => {
                    loader.style.display = 'none';
                    const iframe = document.createElement('iframe');
                    iframe.className = 'content';
                    iframe.src = trueUrl;
                    iframe.setAttribute('frameborder', '0');
                    iframe.setAttribute('scrolling', 'no');
                    iframe.onload = () => {
                        bindMouseWheel(iframe);
                    };
                    document.body.appendChild(iframe);
                }, 1000);
            }
        } else {
            console.log('无效URL');
        }
    } catch (e) {
        console.error('URL解码失败:', e);
    }
}

function bindMouseWheel(iframe) {
    try {
        const doc = iframe.contentWindow.document;
        const isFirefox = navigator.userAgent.includes('Firefox');
        
        function handleMouseWheel(e) {
            e.preventDefault();
            const up = isFirefox ? e.detail < 0 : e.wheelDelta > 0;
            const scrollAmount = up ? -80 : 80;
            doc.documentElement.scrollTop += scrollAmount;
            doc.body.scrollTop += scrollAmount;
        }
        if (isFirefox) {
            doc.addEventListener('DOMMouseScroll', handleMouseWheel, false);
        } else {
            doc.onmousewheel = handleMouseWheel;
        }
    } catch (e) {
        console.error('跨域访问iframe失败:', e);
    }
}
</script>
</body>
</html>
